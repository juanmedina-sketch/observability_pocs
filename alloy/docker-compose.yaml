services:
  # demo-echo:
  #   build:  
  #     context: ./demo_echo
  #   #entrypoint:  ['/bin/sh','-c', "while true; do sleep 1; done;"]
  #   volumes:
  #     - ./config/fluent-bit-custom.conf:/etc/fluent-bit/fluent-bit-custom.conf
  #     - ./config/fluent-bit-parsers-custom.conf:/etc/fluent-bit/fluent-bit-parsers-custom.conf
  #   ports:
  #     - 8080:3000    
  #     - 5678:5678

  demo-echo:
    build:
      context: ./demo_echo
    ports:
      - 8080:3000


  grafana-loki:
    image: grafana/loki
    ports:    
      - 3100:3100      
    volumes:
      - loki-storage:/loki

  grafana:
    image: grafana/grafana          
    ports:    
      - 3000:3000      
    volumes:
      - ./config/grafana.ini:/etc/grafana/grafana.ini
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana-storage:/var/lib/grafana

  alloy:
    container_name: alloy
    image: grafana/agent:latest # Grafana Agent..se puede usar alloy pero cambia la sintaxis
    volumes:
      # - ./alloy/config.alloy:/etc/alloy/config.alloy >> esto sirve parra .alloy con River
      - ./alloy/alloy-config.yaml:/etc/grafana-agent.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /tmp:/tmp
    command: ["-config.file=/etc/grafana-agent.yaml"]
    depends_on:
      - prometheus
      - grafana-loki


  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  node-exporter:
    image: prom/node-exporter
    ports:
      - 9100:9100




volumes:
  loki-storage:
  grafana-storage: 

